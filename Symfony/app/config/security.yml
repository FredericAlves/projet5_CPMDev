# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:

    # Todo : Change 'plaintext' by a real encoder
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    # This part sets the roles hierarchy
    role_hierarchy:
        # Admin inherits amateurs and professionals roles
        ROLE_ADMIN: [ROLE_AMATEUR, ROLE_PRO]
        ROLE_SUPER_ADMIN: [ROLE_AMATEUR, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    # Todo : to delete when we'll use user entity
    providers:
        in_memory:
            memory:
                users:
                    amateur:  { password: amateurpass, roles: [ 'ROLE_AMATEUR' ] }
                    pro:  { password: propass, roles: [ 'ROLE_PRO' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    # Firewall check that we are indeed the one we claim to be
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            anonymous: true
            form_login:
                login_path: login
                check_path: login_check
            logout:
                path: logout
                target: login

    access_control:
    #Uncomment this before production. We use this to check that login page -> https.
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }